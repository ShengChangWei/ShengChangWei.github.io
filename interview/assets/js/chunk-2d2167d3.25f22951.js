(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d2167d3"],{c34a:function(s,a,r){"use strict";r.r(a);var t=function(){var s=this,a=s.$createElement;s._self._c;return s._m(0)},e=[function(){var s=this,a=s.$createElement,r=s._self._c||a;return r("section",[r("h1",[s._v("迭代器模式")]),r("h2",[s._v("1、定义")]),r("p",[s._v("迭代器模式: 是指提供一种方法顺序访问一个聚合对象中的各个元素，而又不需要暴露该对象的内部表示;（学完回来思考思考）")]),r("h2",[s._v("2、JQuery中的迭代器")]),r("p",[s._v("i 为当前索引，n 为当前元素")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[s._v("$.each(["),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(","),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(","),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v("], "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("i, n")]),s._v(") ")]),s._v("{\n    "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'当前下标为：'")]),s._v(" + i);\n    "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'当前值为：'")]),s._v(" + n);\n})\n")])]),r("h2",[s._v("3、实现自己的迭代器")]),r("p",[s._v("代码如下：")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" each = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("ary, callback")]),s._v(") ")]),s._v("{\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" i = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(";i < arr.length; i++) {\n        callback.call(arr[i], i, ary[i]);\n    }\n};\neach(["),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v("], "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("i, n")]),s._v(") ")]),s._v("{\n    alert([i, n]);\n})\n")])]),r("h2",[s._v("4、内部迭代器和外部迭代器")]),r("h3",[s._v("4.1 内部迭代器")]),r("p",[s._v("内部迭代器： 我们刚刚编写的 each 函数属于内部迭代器，each 函数的内部已经定义好了迭代规则，它完全接手整个迭代过程，外部只需要一次初始调用。")]),r("p",[s._v("缺点：由于内部迭代器的迭代规则已经被提前规定，上面的 each 函数就无法同时迭代 2 个数组了。")]),r("p",[s._v("比如现在有个需求，要判断 2 个数组里元素的值是否完全相等， 如果不改写 each 函数本身的代码，我们能够入手的地方似乎只剩下 each 的回调函数了，代码如下：")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" compare = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("ary1, ary2")]),s._v(") ")]),s._v("{\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v("(ary1.length !== ary2.length) {\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("throw")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Error")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'ary1和ary2不相等'")]),s._v(");\n    }\n    each(ary1, "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("i, n")]),s._v(") ")]),s._v("{\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v("(n !==ary2[i]) {\n            "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("throw")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Error")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'ary1和ary2不相等'")]),s._v(");\n        }\n    });\n    alert("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'ary1和ary2相等'")]),s._v(")\n};\ncompare(["),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v("], ["),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(","),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("4")]),s._v("]); "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// throw new Error ( 'ary1 和 ary2 不相等' );")]),s._v("\n")])]),r("h3",[s._v("4.2 外部迭代器")]),r("p",[s._v("外部迭代器：必须显式地请求迭代下一个元素。")]),r("p",[s._v("优缺点：外部迭代器增加了一些调用的复杂度，但相对也增强了迭代器的灵活性，我们可以手工控制迭代的过程或者顺序。")]),r("p",[s._v("外部迭代器实现代码如下：")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" Iterator = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("obj")]),s._v(") ")]),s._v("{\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" current = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(";\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" next = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n        current += "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(";\n    };\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" isDone = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" current >= obj.length\n    };\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" getCurrItem = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" obj[current];\n    };\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" {\n        "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("next")]),s._v(": next,\n        "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("isDone")]),s._v(": isDone,\n        "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("getCurrItem")]),s._v(": getCurrItem\n    }\n}\n")])]),r("p",[s._v("再看看如何改写 compare 函数：")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" compare = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v(" iterator1, iterator2 ")]),s._v(")")]),s._v("{ \n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("while")]),s._v("( !iterator1.isDone() && !iterator2.isDone() ){ \n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" ( iterator1.getCurrItem() !== iterator2.getCurrItem() ){ \n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("throw")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Error")]),s._v(" ( "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'iterator1 和 iterator2 不相等'")]),s._v(" ); \n        } \n        iterator1.next(); \n        iterator2.next(); \n    } \n    alert ( "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'iterator1 和 iterator2 相等'")]),s._v(" ); \n}\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" iterator1 = Iterator( [ "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v(" ] ); \n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" iterator2 = Iterator( [ "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v(" ] );\n\ncompare( iterator1, iterator2 ); "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 输出：iterator1 和 iterator2 相等")]),s._v("\n")])]),r("p",[s._v("外部迭代器虽然调用方式相对复杂，但它的适用面更广，也能满足更多变的需求。内部迭代器和外部迭代器在实际生产中没有优劣之分，究竟使用哪个要根据需求场景而定。")]),r("h2",[s._v("5、迭代类数组对象和字面量对象")]),r("p",[s._v("迭代器模式不仅可以迭代数组，还可以迭代一些类数组对象")]),r("p",[s._v("在JavaScript中， for in语句可以用来迭代普通字面量对象的属性。jQuery中提供了$.each函数来封装各种迭代器")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[s._v("$.each = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("obj, callback")]),s._v(") ")]),s._v("{\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" value,\n        i = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(",\n        length = obj.length,\n        isArray = isArraylike(obj);\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v("(isArray) { "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 迭代类数组")]),s._v("\n            "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v("(; i<length; i++) {\n                value = callback.call(obj[i], i, obj[i]);\n                "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v("(value === "),r("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v(") {\n                    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("break")]),s._v(";\n                }\n            }\n        } "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("else")]),s._v(" {\n            "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v("(i "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("in")]),s._v(" obj) { "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 迭代object 对象")]),s._v("\n                value= callback.call(obj[i], i, obj[i]);\n                "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v("(value === "),r("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v(") {\n                    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("break")]),s._v(";\n                }\n            }\n        }\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" obj;\n}\n")])]),r("h2",[s._v("6、倒序迭代器")]),r("p",[s._v("代码如下：")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" reverseEach = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("ary, callback")]),s._v(") ")]),s._v("{\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" l = ary.length - "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v("; l >="),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("; l--) {\n        callback(l,k ary[l]);\n    }\n};\nreverseEach(["),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v("], "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("i, n")]),s._v(") ")]),s._v("{\n    "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(n); "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 分别输出： 2, 1, 0")]),s._v("\n})\n")])]),r("h2",[s._v("7、中止迭代器")]),r("p",[s._v("在第 5 节中有如下代码：")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v("(value === "),r("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v(") {\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("break")]),s._v(";\n}\n")])]),r("p",[s._v("这句代码的意思是：约定如果回调函数的执行结果返回"),r("code",{pre:!0},[s._v("false")]),s._v(",则提前终止循环，把之前的each函数改写一下：")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" each = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("ary, callback")]),s._v(") ")]),s._v("{\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" i = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("; l= ary.length; i < l; i++) {\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v("(callback(i, arr[i])=== "),r("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v(") {\n            "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("break")]),s._v(";\n        } \n    }\n}\neach(["),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(","),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(","),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v(","),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("4")]),s._v(","),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("5")]),s._v("], "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("i, n")]),s._v(") ")]),s._v("{\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v("(n > "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v(") {\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v(";\n    }\n    "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(n); "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 分别输出： 1,2,3")]),s._v("\n})\n")])]),r("h2",[s._v("8、迭代模式的应用举例")]),r("p",[s._v("需求：根据不同的浏览器或flash插件，使用不同的插件")]),r("p",[s._v("代码如下：")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" getActiveUploadObj = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{ \n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("try")]),s._v("{ \n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" ActiveXObject( "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"TXFTNActiveX.FTNUpload"')]),s._v(" ); "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// IE 上传控件")]),s._v("\n    }"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("catch")]),s._v("(e){ \n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v("; \n    } \n}; \n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" getFlashUploadObj = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{ \n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" ( supportFlash() ){ "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// supportFlash 函数未提供")]),s._v("\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" str = "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'<object type=\"application/x-shockwave-flash\"></object>'")]),s._v("; \n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" $( str ).appendTo( $("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'body'")]),s._v(") ); \n    } \n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v("; \n}; \n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" getFormUpladObj = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{ \n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" str = "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('\'<input name="file" type="file" class="ui-file"/>\'')]),s._v("; "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 表单上传")]),s._v("\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" $( str ).appendTo( $("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'body'")]),s._v(") ); \n};\n")])]),r("p",[s._v("迭代器代码如下：")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" iteratorUploadObj = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{ \n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ( "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" i = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(", fn; fn = "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("arguments")]),s._v("[ i++ ]; ){ \n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" uploadObj = fn(); \n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" ( uploadObj !== "),r("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v(" ){ \n            "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" uploadObj; \n        } \n    } \n}; \n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" uploadObj = iteratorUploadObj( getActiveUploadObj, getFlashUploadObj, getFormUpladObj );\n")])]),r("h2",[s._v("9、小结")]),r("p",[s._v("迭代器模式是一种相对简单的模式，简单到很多时候我们都不认为它是一种设计模式。目前的绝大部分语言都内置了迭代器。")])])}],n=r("2877"),l={},p=Object(n["a"])(l,t,e,!1,null,null,null);a["default"]=p.exports}}]);
//# sourceMappingURL=chunk-2d2167d3.25f22951.js.map