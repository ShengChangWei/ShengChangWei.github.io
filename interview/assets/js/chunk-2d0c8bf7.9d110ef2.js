(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0c8bf7"],{"55cd":function(s,a,r){"use strict";r.r(a);var t=function(){var s=this,a=s.$createElement;s._self._c;return s._m(0)},n=[function(){var s=this,a=s.$createElement,r=s._self._c||a;return r("section",[r("h1",[s._v("代理模式")]),r("h2",[s._v("1、定义")]),r("p",[s._v("代理模式：代理模式是为一个对象提供一个代用品或占位符，以便控制对它的访问。")]),r("p",[s._v("代理模式的关键是，当客户不方便直接访问一个对象或者不满足需要的时候，提供一个替身对象来控制对这个对象的访问，客户实际上访问的是替身对象。替身对象对请求做出一些处理之后，再把请求转交给本体对象。")]),r("h2",[s._v("2、简单代理实例（小明追 MM 的故事）")]),r("p",[s._v("小明送花给A")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" Flower = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{}; \n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" xiaoming = {\n    "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("sendFlower")]),s._v(": "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("target")]),s._v(") ")]),s._v("{\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" flower = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Flower();\n        target.receiveFlower(flower);\n    } \n};\n\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" A = {\n    "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("receiveFlower")]),s._v(": "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("flower")]),s._v(") ")]),s._v("{\n        "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'收到花'")]),s._v(" + flower);\n    }\n};\n\nxiaoming.sendFlower(A);\n")])]),r("p",[s._v("接下来，我们引入代理 B，即小明通过 B 来给 A 送花：")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" Flower = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{};\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" xiaoming = {\n    "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("sendFlower")]),s._v(": "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("target")]),s._v(") ")]),s._v("{\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" flower = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Flower();\n        target.receiverFlower(flower);\n    }\n};\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" B = {\n    "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("receiverFlower")]),s._v(":"),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("flower")]),s._v(") ")]),s._v("{\n        A.receiverFlower(flower)\n    }\n};\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" A = {\n    "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("receiveFlower")]),s._v(":"),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("flower")]),s._v(") ")]),s._v("{\n        "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'收到花'")]),s._v(" + flower)\n    }\n};\nxiaoming.sendFlower(B);\n")])]),r("p",[s._v("此处的代理模式毫无用处，它所做的只是把请求简单地转交给本体。但不管怎样，我们开始引入了代理，这是一个不错的起点。")]),r("p",[s._v("现在我们改变故事的背景设定，假设当 A 在心情好的时候收到花，小明表白成功的几率有60%，而当 A 在心情差的时候收到花，小明表白的成功率无限趋近于 0。")]),r("p",[s._v("小明跟 A 刚刚认识两天，还无法辨别 A 什么时候心情好。如果不合时宜地把花送给 A，花被直接扔掉的可能性很大，这束花可是小明吃了 7 天泡面换来的。")]),r("p",[s._v("但是 A 的朋友 B 却很了解 A，所以小明只管把花交给 B，B 会监听 A 的心情变化，然后选择 A 心情好的时候把花转交给 A，代码如下：")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" Flower = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{};\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" xiaoming = {\n    "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("sendFlower")]),s._v(": "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("target")]),s._v(") ")]),s._v("{\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" flower = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Flower();\n        target.receiverFlower(flower);\n    }\n};\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" B = {\n    "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("receiveFlower")]),s._v(": "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("flower")]),s._v(") ")]),s._v("{\n        A.listenGoodMood("),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n            A.receiveFlower(flower);\n        })\n    }\n}; \n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" A = {\n    "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("receiveFlower")]),s._v(": "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("flower")]),s._v(") ")]),s._v("{\n        "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'收到花'")]),s._v(" + flower)\n    },\n    "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("listenGoodMood")]),s._v(": "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("fn")]),s._v(") ")]),s._v("{\n        setTimeout("),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n            fn();\n        }, "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("10000")]),s._v(");\n    }\n};\nxiaoming.sendFlower(B);\n")])]),r("h2",[s._v("3、保护代理和虚拟代理")]),r("p",[s._v("保护代理：代理 B 可以帮助 A 过滤掉一些请求，比如送花的人中年龄太大的或者没有宝马的，这种请求就可以直接在代理 B处被拒绝掉。这种代理叫作保护代理。\n虚拟代理：假设现实中的花价格不菲，导致在程序世界里，new Flower 也是一个代价昂贵的操作，那么我们可以把 new Flower 的操作交给代理 B 去执行，代理 B 会选择在 A 心情好时再执行 new Flower，这是代理模式的另一种形式，叫作虚拟代理。虚拟代理把一些开销很大的对象，延迟到真正需要它的时候才去创建。代码如下：")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" B = {\n    "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("receiveFlower")]),s._v(": "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("flower")]),s._v(") ")]),s._v("{\n        A.listenGoodMood("),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{ "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 监听A的好心情")]),s._v("\n            "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" flower = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Flower(); "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 延迟创建flower对象")]),s._v("\n            A.receiveFlower(flower);\n        })\n    }\n}\n")])]),r("h2",[s._v("4、虚拟代理实现图片预加载")]),r("p",[s._v("在 Web 开发中，图片预加载是一种常用的技术，如果直接给某个 img 标签节点设置 src 属性，由于图片过大或者网络不佳，图片的位置往往有段时间会是一片空白。常见的做法是先用一张loading 图片占位，然后用异步的方式加载图片，等图片加载好了再把它填充到 img 节点里，这种场景就很适合使用虚拟代理。\n下面我们来实现这个虚拟代理，首先创建一个普通的本体对象，这个对象负责往页面中创建一个 img 标签，并且提供一个对外的 setSrc 接口，外界调用这个接口，便可以给该 img 标签设置src 属性：")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" myImage = ("),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" imgNode = "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".createElement("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'img'")]),s._v(");\n    "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".body.appendChild(imageNode);\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" {\n        "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("setSrc")]),s._v(": "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("src")]),s._v(") ")]),s._v("{\n            imgNode.src = src;\n        }\n    }\n})();\n\nmyImage.setSrc( "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'https://shengchangwei.github.io/assets/img/html-css/rotate.gif'")]),s._v(" );\n")])]),r("p",[s._v("这是如果网络不好页面会有一段长长的空白时间，现在开始引入代理对象 proxyImage，通过这个代理对象，在图片被真正加载好之前，页面中将出现一张占位的菊花图 loading.gif, 来提示用户图片正在加载。代码如下：")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 创建图片并添加到页面")]),s._v("\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" myImage = ("),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" imgNode = "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".createElement("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'img'")]),s._v(");\n    "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".body.appendChild(imgNode);\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" {\n        "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("setSrc")]),s._v(": "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("src")]),s._v(") ")]),s._v("{\n            imgNode.src = src;\n        }\n    }\n})();\n\n"),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 引入缓冲图片")]),s._v("\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" proxyImage = ("),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" img = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Image;\n    img.onload = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n        myImage.setSrc("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".src);\n    }\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" {\n        "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("setSrc")]),s._v(": "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("src")]),s._v(") ")]),s._v("{\n            myImage.setSrc("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'./loading.gif'")]),s._v("); "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 设置本地图片")]),s._v("\n            img.src = src;\n        }\n    }\n})();\n\nproxyImage.setSrc("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'https://shengchangwei.github.io/assets/img/html-css/rotate.gif'")]),s._v(")\n\n")])]),r("p",[s._v("现在我们通过 proxyImage 间接地访问 MyImage。proxyImage 控制了客户对 MyImage 的访问，并且在此过程中加入一些额外的操作，比如在真正的图片加载好之前，先把 img 节点的 src 设置为一张本地的 loading 图片。")]),r("h2",[s._v("5、代理的意义")]),r("p",[s._v("也许读者会有疑问，不过是实现一个小小的图片预加载功能，即使不需要引入任何模式也能办到，那么引入代理模式的好处究竟在哪里呢？下面我们先抛开代理，编写一个更常见的图片预加载函数。")]),r("p",[s._v("不用代理的预加载图片函数实现如下：")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" MyImage = ("),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" imgNode = "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".createElement("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'img'")]),s._v(");\n    "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".body.appendChild(imgNode);\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" img = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Image;\n    img.onload = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n        imgNode.src = img.src;\n    };\n\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" {\n        "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("setSrc")]),s._v(": "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("src")]),s._v(") ")]),s._v("{\n            imgNode.src = "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'./loading.gif'")]),s._v(";\n            img.src = src;\n        }\n    }\n})();\nMyImage.setSrc( "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'https://shengchangwei.github.io/assets/img/html-css/rotate.gif'")]),s._v(" );\n")])]),r("blockquote",[r("p",[s._v("仔细品味下面这段话")])]),r("p",[s._v("为了说明代理的意义，下面我们引入一个面向对象设计的原则——单一职责原则。")]),r("p",[s._v("单一职责原则指的是，就一个类（通常也包括对象和函数等）而言，应该仅有一个引起它变化的原因。如果一个对象承担了多项职责，就意味着这个对象将变得巨大，引起它变化的原因可能会有多个。面向对象设计鼓励将行为分布到细粒度的对象之中，如果一个对象承担的职责过多，等于把这些职责耦合到了一起，这种耦合会导致脆弱和低内聚的设计。当变化发生时，设计可能会遭到意外的破坏。")]),r("p",[s._v("职责被定义为“引起变化的原因”。上段代码中的 MyImage 对象除了负责给 img 节点设置 src外，还要负责预加载图片。我们在处理其中一个职责时，有可能因为其强耦合性影响另外一个职责的实现。")]),r("p",[s._v("另外，在面向对象的程序设计中，大多数情况下，若违反其他任何原则，同时将违反开放—封闭原则。如果我们只是从网络上获取一些体积很小的图片，或者 5 年后的网速快到根本不再需要预加载，我们可能希望把预加载图片的这段代码从 MyImage 对象里删掉。这时候就不得不改动MyImage 对象了。")]),r("p",[s._v("实际上，我们需要的只是给 img 节点设置 src，预加载图片只是一个锦上添花的功能。如果能把这个操作放在另一个对象里面，自然是一个非常好的方法。于是代理的作用在这里就体现出来了，代理负责预加载图片，预加载的操作完成之后，把请求重新交给本体 MyImage。")]),r("p",[s._v("纵观整个程序，我们并没有改变或者增加 MyImage 的接口，但是通过代理对象，实际上给系统添加了新的行为。这是符合开放—封闭原则的。给 img 节点设置 src 和图片预加载这两个功能，被隔离在两个对象里，它们可以各自变化而不影响对方。何况就算有一天我们不再需要预加载，那么只需要改成请求本体而不是请求代理对象即可。")]),r("h2",[s._v("6、代理和本体接口一致性")]),r("p",[s._v("如果有一天我们不再需要预加载，那么就不再需要代理对象，可以选择直接请求本体。其中关键是代理对象和本体都对外提供了 setSrc 方法，在客户看来，代理对象和本体\n是一致的， 代理接手请求的过程对于用户来说是透明的，用户并不清楚代理和本体的区别，这样做有两个好处。")]),r("ul",[r("li",[s._v("用户可以放心地请求代理，他只关心是否能得到想要的结果。")]),r("li",[s._v("在任何使用本体的地方都可以替换成使用代理。")])]),r("p",[s._v("如果代理对象和本体对象都为一个函数（函数也是对象），函数必然都能被执行，则可以认为它们也具有一致的“接口”，代码如下：")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" myImage = ("),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" imgNode = "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".createElement("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'img'")]),s._v(");\n    "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".body.appendChild(imgNode);\n\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("src")]),s._v(") ")]),s._v("{\n        imgNode.src = src;\n    }\n})();\n\n"),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 设置代理")]),s._v("\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" proxyImage = ("),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" img = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Image;\n    \n    img.onload = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n        myImage("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".src);\n    }\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("src")]),s._v(") ")]),s._v("{\n        myImage("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'./loading.gif'")]),s._v(");\n        img.src = src;\n    }\n})();\n\nproxyImage("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'https://shengchangwei.github.io/assets/img/html-css/rotate.gif'")]),s._v(")\n")])]),r("h2",[s._v("7、虚拟代理合并HTTP请求")]),r("p",[s._v("虚拟代理合并HTTP请求的目的就是减轻服务器的压力。\n在 Web 开发中，也许最大的开销就是网络请求。假设我们在做一个文件同步的功能，当我们选中一个 checkbox 的时候，它对应的文件就会被同步到另外一台备用服务器上面，多次点击会多次发送到后台，如此频繁的网路请求将会带来相当大的开销。")]),r("p",[s._v("实例代码如下：")]),r("blockquote",[r("p",[s._v("html")])]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-html"}},[r("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),r("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("body")]),s._v(">")]),s._v(" \n    "),r("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),r("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("input")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("type")]),s._v("="),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"checkbox"')]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("id")]),s._v("="),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"1"')]),s._v(">")]),r("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),r("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("input")]),s._v(">")]),s._v("1 \n    "),r("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),r("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("input")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("type")]),s._v("="),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"checkbox"')]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("id")]),s._v("="),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"2"')]),s._v(">")]),r("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),r("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("input")]),s._v(">")]),s._v("2 \n    "),r("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),r("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("input")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("type")]),s._v("="),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"checkbox"')]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("id")]),s._v("="),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"3"')]),s._v(">")]),r("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),r("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("input")]),s._v(">")]),s._v("3 \n    "),r("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),r("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("input")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("type")]),s._v("="),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"checkbox"')]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("id")]),s._v("="),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"4"')]),s._v(">")]),r("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),r("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("input")]),s._v(">")]),s._v("4 \n    "),r("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),r("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("input")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("type")]),s._v("="),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"checkbox"')]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("id")]),s._v("="),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"5"')]),s._v(">")]),r("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),r("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("input")]),s._v(">")]),s._v("5 \n    "),r("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),r("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("input")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("type")]),s._v("="),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"checkbox"')]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("id")]),s._v("="),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"6"')]),s._v(">")]),r("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),r("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("input")]),s._v(">")]),s._v("6 \n    "),r("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),r("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("input")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("type")]),s._v("="),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"checkbox"')]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("id")]),s._v("="),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"7"')]),s._v(">")]),r("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),r("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("input")]),s._v(">")]),s._v("7 \n    "),r("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),r("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("input")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("type")]),s._v("="),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"checkbox"')]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("id")]),s._v("="),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"8"')]),s._v(">")]),r("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),r("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("input")]),s._v(">")]),s._v("8 \n    "),r("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),r("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("input")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("type")]),s._v("="),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"checkbox"')]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("id")]),s._v("="),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"9"')]),s._v(">")]),r("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),r("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("input")]),s._v(">")]),s._v("9 \n"),r("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),r("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("body")]),s._v(">")]),s._v("\n")])]),r("p",[s._v("接下来，给这些 checkbox 绑定点击事件，并且在点击的同时往另一台服务器同步文件")]),r("blockquote",[r("p",[s._v("js")])]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" synchronousFile = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("id")]),s._v(") ")]),s._v("{\n    "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'发送后台数据'")]),s._v(" + id);\n};\n\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" checkbox = "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".getElementsByTagName("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'input'")]),s._v(");\n\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" i = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(", c; c = checkbox[i++];) {\n    c.onclick = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{ "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 这个this指向当前dom节点")]),s._v("\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".checked === "),r("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("true")]),s._v(") {\n            synchronousFile("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".id);\n        }\n    }\n}\n")])]),r("p",[s._v("上面代码一秒内多次点击会造成网络请求开销较大")]),r("p",[s._v("解决方法：")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" synchronousFile = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("id")]),s._v(") ")]),s._v("{\n    "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'发送后台数据'")]),s._v(" + id);\n};\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" proxySynchronousFile = ("),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" cache = [], "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 保存一段时间内需要同步的Id")]),s._v("\n        timer; "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 定时器")]),s._v("\n    \n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("id")]),s._v(") ")]),s._v("{\n        cache.push(id);\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v("(timer) { "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 保证不会覆盖已经启动的定时器")]),s._v("\n            "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(";\n        }\n\n        timer = setTimeout("),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n            synchronousFile(cache.join("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("','")]),s._v(")); "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 2秒内向本体发送需要同步的Id集合")]),s._v("\n            clearTimeout(timer); "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 清空定时器")]),s._v("\n            timer = "),r("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("null")]),s._v(";\n            cache.length = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("; "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 清空Id清空")]),s._v("\n        }, "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2000")]),s._v(");\n    }\n})();\n\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" checkbox = "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".getElementsByTagName("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'input'")]),s._v(");\n\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" i = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(", c; c = checkbox[i++];) {\n    c.onclick = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".checked === "),r("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("true")]),s._v(") {\n            proxySynchronousFile("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".id);\n        }\n    }\n} \n")])]),r("h2",[s._v("8、虚拟代理在惰性加载中的应用")]),r("p",[s._v("有一个miniConsole.js，miniConsole.js的代码量大概有1000行左右，也许我们并不想一开始就加载这么大的JS文件，因为也许并不是每个用户都需要打印 log。我们希望在有必要的时候才开始加载它，比如当用户按下 F2 来主动唤出控制台的时候。")]),r("p",[s._v("在 miniConsole.js 加载之前，为了能够让用户正常地使用里面的 API，通常我们的解决方案是用一个占位的 miniConsole 代理对象来给用户提前使用，这个代理对象提供给用户的接口，跟实际的 miniConsole 是一样的。")]),r("p",[s._v("用户使用这个代理对象来打印 log 的时候，并不会真正在控制台内打印日志，更不会在页面中创建任何 DOM 节点。即使我们想这样做也无能为力，因为真正的 miniConsole.js 还没有被加载。")]),r("p",[s._v("于是，我们可以把打印 log 的请求都包裹在一个函数里面，这个包装了请求的函数就相当于其他语言中命令模式中的 Command 对象。随后这些函数将全部被放到缓存队列中，这些逻辑都是在 miniConsole 代理对象中完成实现的。等用户按下 F2 唤出控制台的时候，才开始加载真正的miniConsole.js 的代码，加载完成之后将遍历 miniConsole 代理对象中的缓存函数队列，同时依次执行它们。")]),r("p",[s._v("当然，请求的到底是什么对用户来说是不透明的，用户并不清楚它请求的是代理对象，所以\n他可以在任何时候放心地使用 miniConsole 对象。")]),r("p",[s._v("未加载真正的 miniConsole.js 之前的代码如下：")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" cache = [];\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" miniConsole = { \n    "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("log")]),s._v(": "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{ \n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" args = "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("arguments")]),s._v("; \n        cache.push( "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{ \n            "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" miniConsole.log.apply( miniConsole, args ); \n        }); \n    }\n};\nminiConsole.log("),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(");\n")])]),r("p",[s._v("当用户按下 F2 时，开始加载真正的 miniConsole.js，代码如下：")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" handler = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v(" ev ")]),s._v(")")]),s._v("{ \n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" ( ev.keyCode === "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("113")]),s._v(" ){ \n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" script = "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".createElement( "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'script'")]),s._v(" ); \n        script.onload = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{ \n            "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ( "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" i = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(", fn; fn = cache[ i++ ]; ){ \n                 n(); \n            } \n        }; \n        script.src = "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'miniConsole.js'")]),s._v("; \n        "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".getElementsByTagName( "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'head'")]),s._v(" )["),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("].appendChild( script ); \n    } \n};\n\n"),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".body.addEventListener( "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'keydown'")]),s._v(", handler, "),r("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v(" );\n\n"),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// miniConsole.js 代码：")]),s._v("\n\nminiConsole = { \n    "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("log")]),s._v(": "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{ \n        "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 真正代码略")]),s._v("\n        "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log( "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Array")]),s._v(".prototype.join.call( "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("arguments")]),s._v(" ) ); \n    } \n};\n")])]),r("p",[s._v("虽然我们没有给出 miniConsole.js 的真正代码，但这不影响我们理解其中的逻辑。当然这里还要注意一个问题，就是我们要保证在 F2 被重复按下的时候，miniConsole.js 只被加载一次。另外我们整理一下 miniConsole 代理对象的代码，使它成为一个标准的虚拟代理对象，代码如下：")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" miniConsole = ("),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{ \n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" cache = []; \n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" handler = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v(" ev ")]),s._v(")")]),s._v("{ \n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" ( ev.keyCode === "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("113")]),s._v(" ){ \n            "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" script = "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".createElement( "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'script'")]),s._v(" ); \n            script.onload = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{ \n                "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ( "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" i = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(", fn; fn = cache[ i++ ]; ){ \n                    fn(); \n                } \n            }; \n            script.src = "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'miniConsole.js'")]),s._v("; \n            "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".getElementsByTagName( "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'head'")]),s._v(" )["),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("].appendChild( script ); \n            "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".body.removeEventListener( "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'keydown'")]),s._v(", handler );"),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 只加载一次 miniConsole.js ")]),s._v("\n        } \n    }; \n    "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".body.addEventListener( "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'keydown'")]),s._v(", handler, "),r("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v(" ); \n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" { \n        "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("log")]),s._v(": "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{ \n            "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" args = "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("arguments")]),s._v("; \n            cache.push( "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{ \n                "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" miniConsole.log.apply( miniConsole, args ); \n            }); \n        } \n    } \n})(); \nminiConsole.log( "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("11")]),s._v(" ); "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 开始打印 log ")]),s._v("\n"),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// miniConsole.js 代码")]),s._v("\nminiConsole = { \n "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("log")]),s._v(": "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{ \n "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 真正代码略")]),s._v("\n "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log( "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Array")]),s._v(".prototype.join.call( "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("arguments")]),s._v(" ) ); \n } \n};\n")])]),r("h2",[s._v("9、缓存代理")]),r("p",[s._v("缓存代理可以为一些开销大的运算结果提供暂时的存储，在下次运算时，如果传递进来的参数跟之前一致，则可以直接返回前面存储的运算结果。")]),r("h3",[s._v("9.1  缓存代理的例子——计算乘积")]),r("p",[s._v("为了节省示例代码，以及让读者把注意力集中在代理模式上面，这里编写一个简单的求乘积的程序，请读者自行把它脑补为复杂的计算。")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" mult = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n    "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'开始计算乘积'")]),s._v(");\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" a = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(";\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" i = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("; i< "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("arguments")]),s._v(".length; i++) {\n        a = a * "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("arguments")]),s._v("[i];\n    }\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" a; \n};\nmult("),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v("); "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 6")]),s._v("\nmult("),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("4")]),s._v("); "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 24")]),s._v("\n\n"),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 加入代理")]),s._v("\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" proxyMult = ("),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" cache = {};\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" args = "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Array")]),s._v(".prototype.join.call("),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("arguments")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("','")]),s._v(");\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v("(args "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("in")]),s._v(" cache) {\n            "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" cache[args];\n        }\n\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" cache[args] = mult.apply("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("arguments")]),s._v(");\n    }\n})();\n\nproxyMult( "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("4")]),s._v(" ); "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 24")]),s._v("\nproxyMult( "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("4")]),s._v(" ); "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 24")]),s._v("\n")])]),r("p",[s._v("当我们第二次调用 proxyMult( 1, 2, 3, 4 )的时候，本体 mult 函数并没有被计算，proxyMult直接返回了之前缓存好的计算结果。")]),r("p",[s._v("通过增加缓存代理的方式，mult 函数可以继续专注于自身的职责——计算乘积，缓存的功能是由代理对象实现的。")]),r("h3",[s._v("9.2 缓存代理用于ajax异步请求数据")]),r("p",[s._v("我们在常常在项目中遇到分页的需求，同一页的数据理论上只需要去后台拉取一次，这些已经拉取到的数据在某个地方被缓存之后，下次再请求同一页的时候，便可以直接使用之前的数据。")]),r("p",[s._v("显然这里也可以引入缓存代理，实现方式跟计算乘积的例子差不多，唯一不同的是，请求数据是个异步的操作，我们无法直接把计算结果放到代理对象的缓存中，而是要通过回调的方式。具体代码不再赘述，读者可以自行实现。")]),r("h2",[s._v("10、用高阶函数动态创建代理")]),r("p",[s._v("通过传入高阶函数这种更加灵活的方式，可以为各种计算方法创建缓存代理。现在这些计算方法被当作参数传入一个专门用于创建缓存代理的工厂中， 这样一来，我们就可以为乘法、加法、减法等创建缓存代理，代码如下：")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 计算乘积")]),s._v("\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" mult = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" a = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(";\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" i = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("; i< "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("arguments")]),s._v(".length; i++) {\n        a = a * "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("arguments")]),s._v("[i];\n    }\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" a;\n}\n"),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 计算加和")]),s._v("\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" plus = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{ \n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" a = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("; \n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ( "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" i = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(", l = "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("arguments")]),s._v(".length; i < l; i++ ){ \n        a = a + "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("arguments")]),s._v("[i]; \n    } \n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" a; \n};\n\n"),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//  创建缓存代理的工厂")]),s._v("\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" createProxyFactory = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v(" fn ")]),s._v(")")]),s._v("{ \n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" cache = {}; \n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{ \n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" args = "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Array")]),s._v(".prototype.join.call( "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("arguments")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("','")]),s._v(" ); \n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" ( args "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("in")]),s._v(" cache ){ \n            "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" cache[ args ]; \n        } \n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" cache[ args ] = fn.apply( "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("arguments")]),s._v(" ); \n    } \n}; \n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" proxyMult = createProxyFactory( mult ), \nproxyPlus = createProxyFactory( plus ); \nalert ( proxyMult( "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("4")]),s._v(" ) ); "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 输出：24 ")]),s._v("\nalert ( proxyMult( "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("4")]),s._v(" ) ); "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 输出：24 ")]),s._v("\nalert ( proxyPlus( "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("4")]),s._v(" ) ); "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 输出：10 ")]),s._v("\nalert ( proxyPlus( "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("4")]),s._v(" ) ); "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 输出：10")]),s._v("\n")])]),r("h2",[s._v("11、其他代理模式")]),r("p",[s._v("代理模式的变体种类非常多，限于篇幅及其在 JavaScript 中的适用性，本章只简约介绍一下这些代理，就不一一详细展开说明了。")]),r("ul",[r("li",[s._v("防火墙代理：控制网络资源的访问，保护主题不让“坏人”接近。")]),r("li",[s._v("远程代理：为一个对象在不同的地址空间提供局部代表，在 Java 中，远程代理可以是另一个虚拟机中的对象。")]),r("li",[s._v("保护代理：用于对象应该有不同访问权限的情况。")]),r("li",[s._v("智能引用代理：取代了简单的指针，它在访问对象时执行一些附加操作，比如计算一个对象被引用的次数。")]),r("li",[s._v("写时复制代理：通常用于复制一个庞大对象的情况。写时复制代理延迟了复制的过程，当对象被真正修改时，才对它进行复制操作。写时复制代理是虚拟代理的一种变体，DLL（操作系统中的动态链接库）是其典型运用场景。")])]),r("h2",[s._v("12、小结")]),r("p",[s._v("代理模式包括许多小分类，在 JavaScript 开发中最常用的是虚拟代理和缓存代理。虽然代理模式非常有用，但我们在编写业务代码的时候，往往不需要去预先猜测是否需要使用代理模式。当真正发现不方便直接访问某个对象的时候，再编写代理也不迟。")])])}],l=r("2877"),e={},p=Object(l["a"])(e,t,n,!1,null,null,null);a["default"]=p.exports}}]);
//# sourceMappingURL=chunk-2d0c8bf7.9d110ef2.js.map