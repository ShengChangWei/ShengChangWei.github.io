(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0e274f"],{"7f7a":function(s,a,r){"use strict";r.r(a);var t=function(){var s=this,a=s.$createElement;s._self._c;return s._m(0)},n=[function(){var s=this,a=s.$createElement,r=s._self._c||a;return r("section",[r("h1",[s._v("单例模式")]),r("blockquote",[r("p",[s._v("原来只是听过设计模式，却不晓得其真面目，今天，终于步入了设计模式学习的殿堂，想想还有点小兴奋呢")])]),r("h2",[s._v("1、定义")]),r("p",[s._v("单例模式：保证一个类仅有一个实例，并提供一个访问它的全局访问点。（这句话能理解多少是多少，学完整章回来品品）；")]),r("p",[s._v("单例模式的核心是确保只有一个实例，并提供全局访问。")]),r("h2",[s._v("2、实现单例模式（简单）")]),r("p",[s._v("要实现一个标准的单例模式并不复杂，无非是用一个变量来标志当前是否已经为某个类创建过对象，如果是，则在下一次获取该类的实例时，直接返回之前创建的对象。代码如下：")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 构造函数")]),s._v("\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" Singleton = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("name")]),s._v(") ")]),s._v("{\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".name = name;\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".instance = "),r("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("null")]),s._v(";\n};\n"),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 原型方法")]),s._v("\nSingleton.prototype.getName = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n    alert("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".name);\n}\nSingleton.getInstance = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("name")]),s._v(") ")]),s._v("{\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v("(!"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".instance) {\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".instance = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Singleton(name);\n    }\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".instance;\n};\n\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" a = Singleton.getInstance("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'a'")]),s._v(");\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" b = singleton.getInstance("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'b'")]),s._v(");\n"),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(a === b); "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// true")]),s._v("\n\n"),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/**或者**/")]),s._v("\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" Singleton = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("name")]),s._v(") ")]),s._v("{\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".name = name;\n}\nSingleton.prototype.getName = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n    alert("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".name);\n}\nSingleton.getInstance = ("),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" instance = "),r("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("null")]),s._v(";\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" ("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("name")]),s._v(") ")]),s._v("{\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v("(!instance) {\n            instance = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Sinleton(name);\n        }\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" instance;\n    }\n})();\n")])]),r("p",[s._v("缺点： 这种方式相对简单，但有一个问题，就是增加了这个类的“不透明性”，Singleton 类的使用者必须知道这是一个单例类， 跟以往通过 new XXX 的方式来获取对象不同，这里偏要使用 Singleton.getInstance 来获取对象。")]),r("h2",[s._v("3、透明的单例模式")]),r("p",[s._v("我们现在的目标是实现一个“透明”的单例类，用户从这个类中创建对象的时候，可以像使用其他任何普通类一样。在下面的例子中，我们将使用 CreateDiv 单例类，它的作用是负责在页面中创建唯一的 div 节点，代码如下：")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" CreateDiv = ("),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" instance;\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" CreateDiv = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("html")]),s._v(") ")]),s._v("{\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v("(instance) {\n            "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" instance;\n        }\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".html = html;\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".init();\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" instance = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(";\n    }\n    CreateDiv.prototype.init = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" div = "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".createElement("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'div'")]),s._v(");\n        div.innerHTML = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".html;\n        "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".body.appendChild(div);\n    };\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" CreateDiv;\n})();\n\n"),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//创建对象")]),s._v("\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" a = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" CreateDiv("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'sven1'")]),s._v(");\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" b = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" CreateDiv("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'sven2'")]),s._v(");\n"),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(a === b); "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// true")]),s._v("\n")])]),r("p",[s._v("缺点：在这段代码中，CreateDiv 的构造函数实际上负责了两件事情。第一是创建对象和执行初始化 init 方法，第二是保证只有一个对象。虽然我们目前还没有接触过“单一职责原则”的概念，但可以明确的是，这是一种不好的做法，至少这个构造函数看起来很奇怪。")]),r("h2",[s._v("4、用代理实现单例模式")]),r("p",[s._v("现在我们通过引入代理类的方式，来解决上面提到的问题。")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" CreateDiv = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("html")]),s._v(") ")]),s._v("{\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".html = html;\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".init();\n}\nCreateDiv.prototype.init = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" div = "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".createElement("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'div'")]),s._v(");\n    div.innerHTML = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".html;\n    "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".body.appendChild(div)\n}\n\n"),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 接下来引入代理类 ProxySingletonCreateDiv")]),s._v("\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" ProxySingletonCreateDiv = ("),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" instance;\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("html")]),s._v(")")]),s._v("{\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v("(!instance) {\n            instance = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" CreateDiv(html);\n        }\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" instance;\n    }\n})();\n \n "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" a = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" ProxySingletonCreateDiv("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'sven1'")]),s._v(");\n "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" b = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" ProxySingletonCreateDiv("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'sven2'")]),s._v(");\n\n "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 单例模式")]),s._v("\n "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(a === b);\n")])]),r("h2",[s._v("5、JavaScript中单例模式")]),r("p",[s._v("前面提到的几种单例模式的实现，更多的是接近传统面向对象语言中的实现，单例对象从“类”中创建而来。在以类为中心的语言中，这是很自然的做法。比如在 Java 中，如果需要某个对象，就必须先定义一个类，对象总是从类中创建而来的。\n但 JavaScript 其实是一门无类（class-free）语言，也正因为如此，生搬单例模式的概念并无\n意义。在 JavaScript 中创建对象的方法非常简单，既然我们只需要一个“唯一”的对象，为什\n么要为它先创建一个“类”呢？这无异于穿棉衣洗澡，传统的单例模式实现在 JavaScript 中并\n不适用。")]),r("p",[s._v("单例模式的核心是确保只有一个实例，并提供全局访问。")]),r("p",[s._v("全局变量不是单例模式，但在 JavaScript 开发中，我们经常会把全局变量当成单例来使用。但全局变量会造成全局污染。")]),r("p",[s._v("以下几种方式可以相对降低全局变量带来的命名污染。")]),r("h3",[s._v("1.使用命名空间")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" namespace1 = { \n    "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("a")]),s._v(": "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{ \n        alert ("),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v("); \n    }, \n    "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("b")]),s._v(": "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{ \n        alert ("),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v("); \n    } \n};\n\n"),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 以动态地创建命名空间")]),s._v("\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" MyApp = {};\nMyApp.namespace = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v(" name ")]),s._v(")")]),s._v("{ \n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" parts = name.split( "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'.'")]),s._v(" ); \n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" current = MyApp; \n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ( "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" i "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("in")]),s._v(" parts ){ \n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" ( !current[ parts[ i ] ] ){ \n            current[ parts[ i ] ] = {}; \n        } \n        current = current[ parts[ i ] ];\n    } \n};\nMyApp.namespace( "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'event'")]),s._v(" ); \nMyApp.namespace( "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'dom.style'")]),s._v(" ); \n"),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".dir( MyApp ); \n"),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 上述代码等价于：")]),s._v("\n "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" MyApp = { \n    "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("event")]),s._v(": {}, \n    "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("dom")]),s._v(": { \n        "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("style")]),s._v(": {} \n    }\n };\n")])]),r("h3",[s._v("2. 使用闭包包装私有变量")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" user = ("),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" _name = "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'sven'")]),s._v(",\n    _age = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("29")]),s._v(";\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" {\n        "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("getUserInfo")]),s._v(": "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n            "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" _name + "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'-'")]),s._v(" + _age;\n        }\n    }\n})\n")])]),r("h2",[s._v("6、惰性单例")]),r("p",[s._v("惰性单例指的是在需要的时候才创建对象实例。（单例就是创建好实例不用重复创建，只会创建一个实例）")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" createLoginLayer = ("),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" div;\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v("(!div) {\n            div = "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".createElement("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'div'")]),s._v(");\n            div.innerHTML = "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'我是登录页面'")]),s._v(";\n            div.style.display = "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'none'")]),s._v(";\n            "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".body.appendChild(div);\n        }\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" div\n    }\n})();\n"),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".getElementById("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'loginBtn'")]),s._v(").onclick = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" loginLayer = createLoginLayer();\n    loginLayer.style.display = "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'block'")]),s._v(";\n}\n")])]),r("p",[s._v("缺点：")]),r("ul",[r("li",[s._v("这段代码仍然是违反了单一职责原则的，创建对象和管理单例的逻辑都放在createLoginLayer对象内部")]),r("li",[s._v("如果我们创建iframe还要把 div 改成iframe")])]),r("h2",[s._v("7、通用单例模式")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 保持单例的唯一性")]),s._v("\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" getSingle = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("fn")]),s._v(") ")]),s._v("{\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" result;\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" result || (result = fn.apply("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("arguments")]),s._v("));\n    }\n}\n"),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 创建的单例的方法")]),s._v("\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" createSingleframe = getSingle("),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" iframe = "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".createElement("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'iframe'")]),s._v(");\n    "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".body.appendChild(iframe);\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" iframe;\n})\n\n"),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 惰性创建实例并跳转页面")]),s._v("\n"),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".getElementById("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'loginBtn'")]),s._v(").onclick = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" loginLayer = createSingleIframe();\n    loginLayer.src = "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'http://shengchangwei.github.io'")]),s._v("\n}\n")])]),r("p",[s._v("在这个例子中，创建对象的职责和管理单例的职责分别放置在两个方法里，这两个方法可以独立变化而互不影响，当它们连接在一起的时候，就完成了创建唯一实例对象的功能")]),r("p",[s._v("这种单例模式的用途远不止创建对象，比如我们通常渲染完页面中的一个列表之后，接下来要给这个列表绑定 click 事件，如果是通过 ajax 动态往列表里追加数据，在使用事件代理的前提下，click 事件实际上只需要在第一次渲染列表的时候被绑定一次，但是我们不想去判断当前是\n否是第一次渲染列表，如果借助于 jQuery，我们通常选择给节点绑定 one 事件：")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" bindEvent = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{ \n    $( "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'div'")]),s._v(" ).one( "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'click'")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{ \n    alert ( "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'click'")]),s._v(" );  }); \n}; \n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" render = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{ \n    "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log( "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'开始渲染列表'")]),s._v(" ); \n    bindEvent(); \n}; \nrender();\nrender(); \nrender();\n")])]),r("p",[s._v("如果利用 getSingle 函数，也能达到一样的效果。代码如下：")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" bindEvent = getSingle("),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{ \n    "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".getElementById( "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'div1'")]),s._v(" ).onclick = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{ \n    alert ( "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'click'")]),s._v(" ); \n } \n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("true")]),s._v("; \n}); \n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" render = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{ \n    "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log( "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'开始渲染列表'")]),s._v(" ); \n    bindEvent(); \n}; \nrender(); \nrender(); \nrender();\n")])]),r("h2",[s._v("小结")]),r("p",[s._v("在javascript中实现单例模式，不可避免的用到闭包，闭包在创建单例时的作用就是保存已经创建好的实例，不需要再次创建。")])])}],e=r("2877"),p={},l=Object(e["a"])(p,t,n,!1,null,null,null);a["default"]=l.exports}}]);
//# sourceMappingURL=chunk-2d0e274f.891cd67a.js.map